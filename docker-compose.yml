version: "3.9"
services:
  composer:
    image: 'composer:2.1.12'
    volumes:
      - ./:/app
    working_dir: /app
    command: composer install --ignore-platform-reqs

  redis:
    image: "redis:6.2.6-alpine3.15"

  db:
    image: mariadb:10.6.5-focal
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 0
      MYSQL_USER: db
      MYSQL_PASSWORD: db
      MYSQL_DATABASE: db

  adminer:
    image: adminer:4.8.1-standalone
    ports:
      - 8081:8080

  node:
    image: node:17.3.0-alpine3.15
    volumes:
      - ./:/app
    working_dir: /app
    command: npm run watch

  migration:
    image: ${REGISTRY_HOSTNAME}/${REGISTRY_REPOSITORY_NAME}/${APP_NAME}-phpfpm:${APP_VERSION}
    build:
      dockerfile: Dockerfile
      context: .
    depends_on:
      - "db"
    volumes:
    - "./:/srv"
    # Run with php ./bin/console migration:reset for db rebuild from scartch
    command: php ./bin/console migration:continue
    environment:
      NETTE_ENV: ${NETTE_ENV}

  assets:
    image: ${REGISTRY_HOSTNAME}/${REGISTRY_REPOSITORY_NAME}/${APP_NAME}-assets:${APP_VERSION}
    build:
      dockerfile: Dockerfile.assets
      context: .
    volumes:
      - "./www/assets:/usr/share/caddy/assets"

  phpfpm:
    image: ${REGISTRY_HOSTNAME}/${REGISTRY_REPOSITORY_NAME}/${APP_NAME}-phpfpm:${APP_VERSION}
    build:
      dockerfile: Dockerfile
      context: .
    depends_on:
      - "db"
      - "migration"
      - "redis"
    ports:
      - 9000
    volumes:
    - "./:/srv"
    environment:
      NETTE_ENV: ${NETTE_ENV}

  nginx:
    image: nginx:1.21.5-alpine
    depends_on:
    - "phpfpm"
    - "assets"
    ports:
      - '8080:80'
    volumes:
        - ".docker/nginx/site.conf:/etc/nginx/conf.d/default.conf"

#   minio:
#     image: docker.io/bitnami/minio:2022.1.8-debian-10-r14
#     ports:
#       - '9001:9001'
#     volumes:
#       - 'minio_data:/data'
#     environment:
#       MINIO_DEFAULT_BUCKETS: data
#       MINIO_ROOT_USER: minio
#       MINIO_ROOT_PASSWORD: minio123
# volumes:
#   minio_data:
#     driver: local
